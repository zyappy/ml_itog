import streamlit as st
from streamlit.logger import get_logger
import global_data

#Запуск сервера - нажать правой клавишкей в папке с фалйами -> Git Bash Here и ввести "streamlit run Home.py"

LOGGER = get_logger(__name__)


global_data.global_data = None

def run():

    st.set_page_config(
        page_title="Классификатор",
    )

    st.write("# Прогнозирование добыче нефти и жидкости с помощью LSTM")
    st.header('Введение:')
    st.markdown(
        """
        Наше приложение предназначено для предсказания объемов добычи нефти с использованием технологий машинного обучения, а конкретно, рекуррентных нейронных сетей (LSTM). Прогнозирование добычи нефти имеет стратегическое значение для нефтяных компаний, поскольку оно позволяет эффективно управлять процессами производства, оптимизировать затраты и максимизировать выход продукции.

        """
    )
    st.header('Зачем прогнозировать добычу нефти:')
    st.markdown(
        '''
        Оптимизация производства: 

        Прогнозирование позволяет лучше планировать производственные операции и распределять ресурсы, минимизируя временные и финансовые затраты.
        
        Управление рисками: 
        
        Предсказание добычи помогает компаниям адаптироваться к изменениям в рыночных условиях, стратегически реагировать на факторы, влияющие на добычу, такие как изменения цен на нефть или политическая нестабильность.
        
        Повышение эффективности: 
        
        С точными прогнозами возможно лучшее использование оборудования, уменьшение времени простоя и оптимизация процессов добычи.
        
        '''
    )

    st.header('Способы прогнозирования:')
    st.markdown(
        '''
        Статистические методы:

        Включают в себя использование временных рядов и методов регрессии для анализа и предсказания добычи. Однако они могут быть ограничены в способности улавливать сложные нелинейные зависимости в данных.
        
        Машинное обучение: 

        Включает в себя различные методы, такие как линейная регрессия, случайные леса, и, в нашем случае, рекуррентные нейронные сети (LSTM). Модели глубокого обучения, такие как LSTM, способны эффективно обрабатывать временные зависимости и адаптироваться к изменениям в данных.
        
        '''
    )

    st.header('Почему нейронные сети (LSTM):')
    st.markdown(
        '''
        Учет долгосрочных зависимостей: LSTM позволяют улавливать долгосрочные зависимости в данных, что особенно важно для прогнозирования временных рядов с переменными трендами и сезонностью.
        
        Адаптивность к сложным шаблонам: Нейронные сети способны автоматически выявлять сложные нелинейные шаблоны в данных, что делает их эффективными в сценариях, где традиционные методы могут оказаться недостаточно гибкими.
        
        Обучение на больших объемах данных: LSTM могут успешно обучаться на больших объемах исторических данных, что особенно важно для точного прогнозирования в условиях нефтяной промышленности.

        '''
    )

if __name__ == "__main__":
    run()
